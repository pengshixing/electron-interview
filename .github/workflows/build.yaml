name: Electron Build and Release

on:
  push:
    branches:
      - main
    # 只在提交消息包含 "build" 时触发
    if: "contains(github.event.head_commit.message, 'build')"

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ windows-latest, macos-latest]
    steps:
      # 切换到 master 分支
      - name: Checkout code
        uses: actions/checkout@v3
      # 设置 Node.js 环境为版本 20
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      # 下载依赖
      - name: Install dependencies
        run: npm install
      # step4: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          npm run build-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build mac app
        if: matrix.os == 'macos-latest'
        run: |
          npm run build-mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step5: cleanup artifacts in package
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "package/!(*.exe)"

      - name: cleanup artifacts for macosZ
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "package/!(*.dmg)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: package

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "package/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
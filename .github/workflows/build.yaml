name: Electron Build and Release

on:
  push:
    branches:
      - main
        # 只在提交消息包含 "build" 时触发
    if: "contains(github.event.head_commit.message, 'build')"

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      # 切换到 master 分支
      - name: Checkout code
        uses: actions/checkout@v3
      # 设置 Node.js 环境为版本 18
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      # 下载依赖
      - name: Install dependencies
        run: npm install
      # 开始打包
      - name: Build Electron app
        run: |
          if [ ${{ matrix.os }} == "windows-latest" ]; then
            npm run build && npm run build-win
          elif [ ${{ matrix.os }} == "macos-latest" ]; then
            npm run build && npm run build-mac
          else
            npm run build && npm run build-linux
          fi
        shell: bash
      # 发布到 release
      - name: Create release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          tag: 'v-0.0.1'
          artifacts: |
            if [ ${{ matrix.os }} == "windows-latest" ]; then
              'package/win-unpacked/**'
            elif [ ${{ matrix.os }} == "macos-latest" ]; then
              'package/mac/**'
            else
              'package/linux/**'
            fi
